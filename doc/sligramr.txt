*****

Aquefir Slick Documentation File Format

Copyright © 2020 Aquefir.

*****

1. INTRODUCTION

This is an ASCII-friendly grammar for drafting and collating file-folder
hierarchies in a single text file. This is helpful for enhancing reading and
navigability without introducing fragile and intensive ‘compilation steps’ for
a project’s documentation. The extension for these files should be ‘.sli’.

2. RECORDS AND FORMATTING

Documentation files usually correspond to modules in the project sources or
API headers. fsschema.txt offers one method of achieving this context, but in
any case it is outside the scope of this grammar.

Similar to tarballs, SLI docs consist of a series of records. Here they are
separated by a blank line (‘\n\n’). Records begin with a declaration line and
have their contents indented once with hard tabs. There is a regex pattern
specifying the declaration line, with groupings for its different parts:

/^([A-Za-z0-9_\-\.]+\/)*([A-Za-z0-9_\-\.]+)([\$#\/])$/
	$1 := directory parts (may be multiple); used to section a module
	$2 := file part, for paragraphing a specific detail
	$3 := content type; $ denotes formatted text, / denotes a folder, and
		# denotes ‘plain’ text

Both formatted text and unformatted (i.e. plain) text are always kept in
UTF-8 without BOM.

3. FORMATTED FILES

.csv - comma-separated values
	The first line labels the columns, and every line thereafter forms a row.
	For compatibility reasons there are no escaping mechanisms, so literal
	commas are not allowed, however this can be worked around using Greek
	commas (‚).

.bin - binary file
	A list of hexadecimal bytes, meant to be stored on-disk as-is. Newlines,
	whitespace and casing are insignificant. Bear in mind that this disregards
	endianness (ergo, “0AFC ED40” is “0A FC ED 40”, not LE “FC 0A 40 ED”).

.asc - ASCII-friendly escaped text
	Identical to unformatted ‘plain’ text, except backslash (\) is significant.
	The following escape sequences are supported:
		\\ - literal backslash
		\0 - NUL byte (equiv. \h00)
		\h?? - a single octet in hexadecimal
		\r - carriage return
		\n - line feed
		\t - horizontal tabulation
		\u???? - a single Unicode codepoint
